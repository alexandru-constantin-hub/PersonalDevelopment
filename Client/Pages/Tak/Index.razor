@page "/tasks"
@using Microsoft.AspNetCore.Authorization
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

@if (Model == null)
{
    <Loading />
}
else
{
    <div class="row">
        <div class="col-10">
            <Breadcrumb BreadcrumbElements=@breadcrumbLink ActivePage="Tasks list" Title="Your tasks" />
        </div>
        <Bookmark Link="/tasks/create" Icon="bi-plus-square" />
    </div>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-sm-12 col-md-6">
                            <div class="bg-light p-4">
                                <h5 class="pb-2">Important and Urgent</h5>
                                @foreach (var value in Model)
                                {
                                    @if (value.Category == "IU")
                                    {
                                        <CardComponent tak=value ExternalMethod="@Delete" />
                                    }
                                }
                            </div>                          
                        </div>
                        <div class="col-sm-12 col-md-6">
                            <div class="bg-light p-4">
                                <h5 class="pb-2">Important and Not Urgent</h5>
                                @foreach (var value in Model)
                                {
                                    @if (value.Category == "INU")
                                    {
                                        <CardComponent tak=value ExternalMethod="@Delete" />
                                    }
                                }
                            </div>    
                        </div>
                        <div class="col-sm-12 col-md-6">
                            <div class="bg-light p-4">
                                <h5 class="pb-2">Not Important and Urgent</h5>
                                @foreach (var value in Model)
                                {
                                    @if (value.Category == "NIU")
                                    {
                                        <CardComponent tak=value ExternalMethod="@Delete" />
                                    }
                                }
                            </div>  
                        </div>
                        <div class="col-sm-12 col-md-6">
                            <div class="bg-light p-4">
                                <h5 class="pb-2">Not Important and Not Urgent</h5>
                                @foreach (var value in Model)
                                {
                                    @if (value.Category == "NINU")
                                    {
                                        <CardComponent tak=value ExternalMethod="@Delete" />
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row mt-3">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-12">
                            <div class="bg-light p-4">
                                <h5 class="pb-2">Tasks without a category</h5>
                                 @foreach (var value in Model)
                                    {
                                        @if (value.Category != "NINU" && value.Category != "INU" && value.Category != "NIU" && value.Category != "IU")
                                        {
                                            <CardComponent tak=value ExternalMethod="@Delete" />
                                        }

                                    }
                            </div>   
                        </div>
                    </div>
                </div>
                
            </div>
            
        </div>
    </div>
    <div class="row mt-3">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-12">
                            <div class="bg-light p-4">
                                <h5 class="pb-2">Tasks completed</h5>
                                 @foreach (var value in Model)
                                    {
                                        @if (value.Category != "NINU" && value.Category != "INU" && value.Category != "NIU" && value.Category != "IU")
                                        {
                                            <CardComponent tak=value ExternalMethod="@Delete" />
                                        }

                                    }
                            </div>   
                        </div>
                    </div>
                </div>
                
            </div>
            
        </div>
    </div>

}

@code {
    private List<Tak> Model;

    protected async override Task OnInitializedAsync()
    {
        Model = await _client.GetFromJsonAsync<List<Tak>>("/api/Taks");
    }

    async Task Delete(int takId)
    {
        var tak = Model.First(q => q.Id == takId);
        var confirm = await js.InvokeAsync<bool>("confirm", "Do you want to delete " + tak.Name);
        if (confirm)
        {
            await _client.DeleteAsync("/api/taks/" + takId);
            await OnInitializedAsync();
        }

    }

    public Dictionary<string, string> breadcrumbLink { get; set; } =
    new Dictionary<string, string>()
                        {
       { "Home", "/" }
                        };

}
