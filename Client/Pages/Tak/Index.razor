@page "/tasks"
@using Microsoft.AspNetCore.Authorization
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]


<div class="row">
    <div class="col-10">
        <Breadcrumb BreadcrumbElements=@breadcrumbLink ActivePage="Your tasks" Title="Your tasks" />
    </div>
</div>
<Tabs Domain="tasks" />

<AuthorizeView>
    <NotAuthorized>
        <LoginInvitation />
    </NotAuthorized>

    <Authorized>

        @if (Model == null)
        {
            <Loading />
        }
        else
        {
            
            <Bookmark Link="/tasks/create" ButtonText="Create a new task" />
           
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="row g-3">
                                <div class="col-sm-12 col-md-6">
                                    <div class="bg-light p-4 border border-danger">
                                        <h5 class="pb-2">Important and Urgent</h5>
                                        @foreach (var value in Model)
                                        {
                                            @if (value.Category == "IU")
                                            {
                                                <CardComponent tak=value ExternalMethod="@Delete" ObjectiveTaks=ObjectiveTaks />
                                            }
                                        }
                                    </div>
                                </div>
                                <div class="col-sm-12 col-md-6">
                                    <div class="bg-light p-4 border border-primary">
                                        <h5 class="pb-2">Important and Not Urgent</h5>
                                        @foreach (var value in Model)
                                        {
                                            @if (value.Category == "INU")
                                            {
                                                <CardComponent tak=value ExternalMethod="@Delete" ObjectiveTaks=ObjectiveTaks />
                                            }
                                        }
                                    </div>
                                </div>
                                <div class="col-sm-12 col-md-6">
                                    <div class="bg-light p-4 border border-secondary">
                                        <h5 class="pb-2">Not Important and Urgent</h5>
                                        @foreach (var value in Model)
                                        {
                                            @if (value.Category == "NIU")
                                            {
                                                <CardComponent tak=value ExternalMethod="@Delete" ObjectiveTaks=ObjectiveTaks />
                                            }
                                        }
                                    </div>
                                </div>
                                <div class="col-sm-12 col-md-6">
                                    <div class="bg-light p-4 border border-info">
                                        <h5 class="pb-2">Not Important and Not Urgent</h5>
                                        @foreach (var value in Model)
                                        {
                                            @if (value.Category == "NINU")
                                            {
                                                <CardComponent tak=value ExternalMethod="@Delete" ObjectiveTaks=ObjectiveTaks />
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row mt-3">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-12">
                                    <div class="bg-light p-4">
                                        <h5 class="pb-2">Tasks without a category</h5>
                                        @foreach (var value in Model)
                                        {
                                            @if (value.Category != "NINU" && value.Category != "INU" && value.Category != "NIU" && value.Category != "IU")
                                            {
                                                <CardComponent tak=value ExternalMethod="@Delete" ObjectiveTaks=ObjectiveTaks />
                                            }

                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>
            </div>
            <div class="row mt-3">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-12">
                                    <div class="bg-light p-4">
                                        <h5 class="pb-2">Tasks completed</h5>
                                        @foreach (var value in Model)
                                        {
                                            @if (value.Category != "NINU" && value.Category != "INU" && value.Category != "NIU" && value.Category != "IU")
                                            {
                                                <CardComponent tak=value ExternalMethod="@Delete" ShowProcentage=false ObjectiveTaks=ObjectiveTaks />
                                            }

                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>
            </div>

        }
    </Authorized>
</AuthorizeView>


@code {
    private List<Tak> Model;
    private List<ObjectiveTak> ObjectiveTaks;

    protected async override Task OnInitializedAsync()
    {
        Model = await _client.GetFromJsonAsync<List<Tak>>("/api/Taks");
        ObjectiveTaks = await _client.GetFromJsonAsync<List<ObjectiveTak>>("/api/objectivetaks");
    }

    async Task Delete(int takId)
    {
        var tak = Model.First(q => q.Id == takId);
        var confirm = await js.InvokeAsync<bool>("confirm", "Do you want to delete " + tak.Name);
        if (confirm)
        {
            await _client.DeleteAsync("/api/taks/" + takId);
            await OnInitializedAsync();
        }

    }

    public Dictionary<string, string> breadcrumbLink { get; set; } =
    new Dictionary<string, string>()
                            {
       { "Home", "/" }
                            };

}
