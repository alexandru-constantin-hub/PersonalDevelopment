@page "/tasks/{id:int}"
@using Microsoft.AspNetCore.Authorization
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

@if (tak == null)
{
    <Loading />
}
else
{
     <div class="row">
        <div class="col-10">
            <Breadcrumb BreadcrumbElements=@breadcrumbLink ActivePage="Your task" Title="Your task" />
        </div>
        <BookmarkBack />
    </div>

    <div class="row row-cols-1 row-cols-md-2 g-4">
        <div class="col">
            <CardComponent tak=tak ExternalMethod="@Delete" ObjectiveTaks=ObjectiveTaks/>
        </div>
    </div>

    
}


@code {
    [Parameter] public int id { get; set; }
    Tak tak = new Tak();
    private List<ObjectiveTak> ObjectiveTaks;

    protected async override Task OnParametersSetAsync()
    {
        tak = await _client.GetFromJsonAsync<Tak>("/api/taks/" + id);
        ObjectiveTaks = await _client.GetFromJsonAsync<List<ObjectiveTak>>("/api/objectivetaks");
    }

    async Task Delete()
    {
        
        var confirm = await js.InvokeAsync<bool>("confirm", "Do you want to delete " + tak.Name);
        if (confirm)
        {
            await _client.DeleteAsync("/api/taks/" + tak.Id);
            await OnInitializedAsync();
        }
        
    }

    public Dictionary<string, string> breadcrumbLink { get; set; } =
    new Dictionary<string, string>()
                         {
           { "Home", "/" },
           { "Tasks", "/tasks" }
                         };

    
}
